service: ceos-patient

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  timeout: 10 #default is 6
  stage: dev # path will be domain.name.com/dev/...
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  exclude:
    - coverage/**
    - .circleci/**


functions:
  create:
    handler: handlers/patient/create.create
    events:
      - http:
          path: patient
          method: post
          cors: true

  get:
    handler: handlers/patient/get.get
    events:
      - http:
          path: patient/{id}
          method: get
          cors: true

  list:
    handler: handlers/patient/list.list
    events:
      - http:
          path: patient
          method: get
          cors: true

  update:
    handler: handlers/patient/update.update
    events:
      - http:
          path: patient/{id}
          method: put
          cors: true

  delete:
    handler: handlers/patient/delete.delete
    events:
      - http:
          path: patient/{id}
          method: delete
          cors: true


plugins:
  - serverless-offline # adding so it can be run offline
